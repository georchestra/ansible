- name: georchestra deployment
  hosts: mygeorchestra
  # note: above host must match the content of the "hosts" file
  become: yes
  roles:
    - georchestra
  vars:
    cadastrapp: {
      enabled: false,
      db: {
        name: cadastrapp_qgis,
        user: cadastrapp_qgis,
        schema: cadastrapp_qgis,
        pass: cadastrapp_qgis
      },
      qgisdb: {
        host: 10.0.0.9,
        port: 5432,
        name: qadastre,
        user: qadastre,
        pass: qadastre,
        schema: public
      },
      gitrepo: "https://github.com/georchestra/cadastrapp",
      gitversion: master,
      debsrc: {
        path: /root/src/cadastrapp/cadastrapp/cadastrapp/target/,
        pkg: georchestra-cadastrapp_1.3+201606281215-1_all.deb,
        host: web-wheezy
      },
      workdir: /tmp/cadastrapp/tmp
    }
    openldap: {
      topdc: georchestra,
      basedn: "dc=georchestra,dc=org", # has to be in the form dc={{ topdc }},dc=xx
      rootdn: "cn=admin,dc=georchestra,dc=org",
      rootpw: secret,
      gitrepo: "https://raw.github.com/georchestra/georchestra",
      ldifs: [
      bootstrap,
      docker-root/georchestraSchema,
      docker-root/etc/ldap.dist/modules/groupofmembers,
      docker-root/etc/ldap.dist/modules/openssh,
      docker-root/memberof,
      root,
      docker-root/georchestra
      ],
      gitversion: master
    }
    georchestra: {
      fqdn: georchestra.example.org,
      ign_api_key: luvs4p9c4yq5ewfwqcqgm83f, #invalid key
      db: {
        name: georchestra,
        user: georchestra,
        pass: georchestra
      },
      datadir: {
        path: /etc/georchestra,
        gitrepo: "https://github.com/georchestra/datadir",
        gitversion: master
      },
      debian: {
        repo: "deb https://packages.georchestra.org/debian 20.0.x main",
        key: "https://packages.georchestra.org/debian/landry%40georchestra.org.gpg.pubkey"
      }
    }
    geonetwork: {
      db: {
        schema: geonetwork,
        user: geonetwork,
        pass: geonetwork
      },
      datadir: {
        path: /srv/data/geonetwork/,
        gitrepo: "https://github.com/georchestra/geonetwork_minimal_datadir",
        gitversion: gn3.8.3
      }
    }
    geoserver: {
      privileged: {
        user: geoserver_privileged_user,
        pass: gerlsSnFd6SmM
      },
      datadir: {
        path: /srv/data/geoserver/,
        gitrepo: "https://github.com/georchestra/geoserver_minimal_datadir",
        gitversion: master
      },
      wms_srslist: [2154, 3857, 3942, 3943, 3944, 3945, 3946, 3947, 3948, 3949, 3950, 4171, 4258, 4326, 23030, 23031, 23032, 32630, 32631, 32632, 4171, 4271, 3758]
    }
    geowebcache_datadir: /srv/data/geowebcache/
    extractor_datadir: /srv/data/extractor/
    tomcat_keystore_pass: tomcatkstp
    tomcat_basedir: /srv/tomcat
    system_locale: en_US.UTF-8
    logs_basedir: /srv/log
    force_https: true #set to false if running behind a reverse proxy that does SSL
    console_adminemail: admin@example.org
    console_captcha: {
      # if empty, captcha during registration will be disabled
      privateKey: '',
      publicKey: '',
    }
    tomcat_instances: {
      proxycas: { port: 8180, control_port: 8105 },
      georchestra: { port: 8280, control_port: 8205 },
      geoserver: { port: 8380, control_port: 8305 }
    }
    georchestra_wars: {
      analytics: { pkg: georchestra-analytics,  tomcat: georchestra },
      cas: { pkg: georchestra-cas, tomcat: proxycas },
      extractorapp: { pkg: georchestra-extractorapp,  tomcat: georchestra },
      geonetwork: { pkg: georchestra-geonetwork3,  tomcat: georchestra },
      geoserver: { pkg: georchestra-geoserver, tomcat: geoserver },
      geowebcache: { pkg: georchestra-geowebcache, tomcat: georchestra },
      header: { pkg: georchestra-header, tomcat: georchestra },
      console: { pkg: georchestra-console, tomcat: georchestra },
      mapfishapp: { pkg: georchestra-mapfishapp, tomcat: georchestra },
      cadastrapp: { pkg: georchestra-cadastrapp, tomcat: georchestra },
      ROOT: { pkg: georchestra-security-proxy, tomcat: proxycas }
    }

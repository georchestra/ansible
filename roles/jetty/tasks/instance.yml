- name: set a bunch of vars
  set_fact:
    initscript: "/etc/init.d/jetty-{{ war.key }}"
    instance_name: "jetty-{{ war.key }}"
    instance_home: "{{ jetty_basedir }}/{{ war.key }}"
    instance_config: "{{ war.value }}"
    instance_logdir: "{{ logs_basedir }}/jetty/{{ war.key }}"

- name: copy initscript
  command: "cp /etc/init.d/jetty8 {{ initscript }}"
  args:
    creates: "{{ initscript }}"

- name: fixup initscript
  lineinfile:
    dest: "{{ initscript }}"
    regexp: "{{ item.regexp }}"
    line: "{{ item.line }}"
    state: present
  with_items:
  - { regexp: '^# Provides:.*jetty.*$', line: '# Provides: {{ instance_name }}' }
  - { regexp: '^NAME.*$', line: 'NAME={{ instance_name }}' }
  - { regexp: '^JETTY_HOME.*$', line: 'JETTY_HOME={{ instance_home }}' }

- name: create dirs
  file:
    path: "{{ item }}"
    owner: jetty
    state: directory
  with_items:
  - "{{ instance_home }}"
  - "{{ instance_home }}/webapps"
  - "{{ instance_logdir }}"

- name: symlink stuff
  file:
    src: "/usr/share/jetty8/{{ item }}"
    dest: "{{instance_home}}/{{ item }}"
    state: link
  with_items: [ start.jar, start.ini, lib, etc ]

- name: install instance config in /etc/default
  template: src=jetty-config.j2 dest=/etc/default/{{ instance_name }}

#- name: install instance connector
#  template: src=server-{{ item }}.xml.j2 dest={{ tomcat_basedir }}/{{ item }}/conf/server.xml

- name: reload systemd so that it finds the new unit
  command: systemctl daemon-reload

- name: enable instance
  service:
    name: "{{ instance_name }}"
    enabled: yes
    state: started
